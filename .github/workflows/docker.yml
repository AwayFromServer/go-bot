name: Docker Builder
on:
  push:
    branches: [ main ]
    tags: [ 'v*', '!v*-pre*']
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - '5000:5000'
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
    - uses: actions/checkout@v4
    - name: get sops
      run: |
        set -euo pipefail
        wget https://github.com/getsops/sops/releases/download/v3.8.1/sops_3.8.1_amd64.deb
        echo ' 535bce529e2df7368ffba3fed2b427b9f964318fa28959d913924a70ba01c086  sops_3.8.1_amd64.deb' > sops_3.8.1_amd64.deb.sig
        sha256sum -c sops_3.8.1_amd64.deb.sig
        sudo dpkg -i sops_3.8.1_amd64.deb
    - name: enable experimental mode
      run: |
        mkdir -p ~/.docker
        echo '{"experimental": "enabled"}' > ~/.docker/config.json
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.0.0
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3.3.0
      with:
        version: v0.11.2
        driver-opts: |
          image=moby/buildkit:buildx-stable-1
          network=host
    - name: Available platforms
      run: echo {{ `${{ steps.buildx.outputs.platforms }}` }}
    - run: docker info && docker version
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: determine if this is a tag
      run: |
        if (git describe --abbrev=0 --exact-match &>/dev/null); then
          tag=$(git describe --abbrev=0 --exact-match)
          echo "is_tag=true" >> $GITHUB_ENV
          echo "git_tag=$tag" >> $GITHUB_ENV
          # splits the major version from $tag - assumes it's a 3-part semver
          echo "major_version=${tag%%\.*}" >> $GITHUB_ENV
        fi
        echo $GITHUB_ENV
      if: github.repository == 'awayfromserver/gobot'
    - uses: nhedger/setup-sops@v2
      id: secrets
      with:
        version: 3.8.1
    - name: Create key.gpg
      run: echo -e "$SOPS_KEY" | base64 -d | sed 's/\\n/\'$'\n''/g' > key.gpg
      env:
        SOPS_KEY: ${{ secrets.SOPS_KEY }}
    - name: Import key.gpg
      run: gpg --import key.gpg
    - name: Decrypt config.enc.yaml
      run: sops -d config.enc.yaml > config.yaml
    - name: Build & Push (non-main)
      run: |
        set -ex
        make docker-multi COMMIT=${{ github.sha }} DOCKER_REPO=localhost:5000/gobot BUILDX_ACTION=--push

        docker buildx imagetools create --dry-run -t localhost:5000/gobot:dev localhost:5000/gobot:latest
        docker buildx imagetools create --dry-run -t localhost:5000/gobot:dev-alpine localhost:5000/gobot:alpine
      if: github.repository != 'awayfromserver/gobot' || (github.ref != 'refs/heads/main' && env.is_tag != 'true')
    - name: Login to GHCR
      uses: docker/login-action@v3.2.0
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      if: github.repository == 'awayfromserver/gobot' && (github.ref == 'refs/heads/main' || env.is_tag == 'true')
    - name: Login to DockerHub
      uses: docker/login-action@v3.2.0
      with:
          # NOTE: DOCKERHUB_TOKEN and DOCKERHUB_USERNAME must be present in https://github.com/awayfromserver/gobot/settings
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.repository == 'awayfromserver/gobot' && ( github.ref == 'refs/heads/main' || env.is_tag == 'true')
    - name: Build & Push (main)
      run: |
        make docker-multi COMMIT=${{ github.sha }} DOCKER_REPO=awayfromserver/gobot BUILDX_ACTION=--push
        make docker-multi COMMIT=${{ github.sha }} DOCKER_REPO=ghcr.io/awayfromserver/gobot BUILDX_ACTION=--push
      if: github.repository == 'awayfromserver/gobot' && github.ref == 'refs/heads/main'
    - name: Build & Push (tagged release)
      run: |
        export srcrepo=awayfromserver/gobot
        make docker-multi COMMIT=${{ github.sha }} DOCKER_REPO=awayfromserver/gobot BUILDX_ACTION=--push

        set -x
        export repo=awayfromserver/gobot
        docker buildx imagetools create -t ${repo}:stable ${srcrepo}:latest
        docker buildx imagetools create -t ${repo}:${git_tag} ${srcrepo}:latest
        docker buildx imagetools create -t ${repo}:${major_version} ${srcrepo}:latest

        docker buildx imagetools create -t ${repo}:stable-alpine ${srcrepo}:alpine
        docker buildx imagetools create -t ${repo}:${git_tag}-alpine ${srcrepo}:alpine
        docker buildx imagetools create -t ${repo}:${major_version}-alpine ${srcrepo}:alpine

        export repo=gobot/gobot
        docker buildx imagetools create -t ${repo}:stable ${srcrepo}:latest
        docker buildx imagetools create -t ${repo}:${git_tag} ${srcrepo}:latest
        docker buildx imagetools create -t ${repo}:${major_version} ${srcrepo}:latest

        docker buildx imagetools create -t ${repo}:stable-alpine ${srcrepo}:alpine
        docker buildx imagetools create -t ${repo}:${git_tag}-alpine ${srcrepo}:alpine
        docker buildx imagetools create -t ${repo}:${major_version}-alpine ${srcrepo}:alpine

        # and now GHCR
        export repo=ghcr.io/awayfromserver/gobot
        docker buildx imagetools create -t ${repo}:stable ${srcrepo}:latest
        docker buildx imagetools create -t ${repo}:${git_tag} ${srcrepo}:latest
        docker buildx imagetools create -t ${repo}:${major_version} ${srcrepo}:latest

        docker buildx imagetools create -t ${repo}:stable-alpine ${srcrepo}:alpine
        docker buildx imagetools create -t ${repo}:${git_tag}-alpine ${srcrepo}:alpine
        docker buildx imagetools create -t ${repo}:${major_version}-alpine ${srcrepo}:alpine
      if: github.repository == 'awayfromserver/gobot' && env.is_tag == 'true'
