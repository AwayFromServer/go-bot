name: Go Builder
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  detect-bypass:  #for testing
    name: Detect Bypass
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v1
      - name: Check for .skip_ci
        id: skip-ci-check
        uses: thebinaryfelix/check-file-existence-action@v1
        with:
          files: '.skip_ci'
  testing:
    name: Testing Go Build
    needs: detect-bypass
    if: ${{ needs.detect-bypass.skip_ci_check.outputs.exists }} == 'true'
    runs-on: ubuntu-latest
    container:
      image: golang:1.22-alpine
    steps:
      - run: |
          apk add git make bash sops gnupg
          git config --global user.email "bogus@example.com"
          git config --global user.name "Someone"
          git config --global --add safe.directory /__w/gobot/gobot
      - uses: nhedger/setup-sops@v2
        id: secrets
        with:
          version: 3.8.1
      - name: Create key.pgp
        run: echo "$SOPS_KEY" | base64 -d | gpg --import
        env:
          SOPS_KEY: "${{ secrets.SOPS_KEY }}"
  linux-build:
    name: Go Build
    needs: detect-bypass
    if: ${{ needs.detect-bypass.skip_ci_check.outputs.exists }} == 'false'
    runs-on: ubuntu-latest
    container:
      image: golang:1.22-alpine
    steps:
      - run: |
          apk add git make bash sops gnupg
          git config --global user.email "bogus@example.com"
          git config --global user.name "Someone"
          git config --global --add safe.directory /__w/gobot/gobot
      - uses: nhedger/setup-sops@v2
        id: secrets
        with:
          version: 3.8.1
      - name: Create key.pgp
        run: echo "$SOPS_KEY" | base64 -d | gpg --import
        env:
          SOPS_KEY: "${{ secrets.SOPS_KEY }}"
      - name: Decrypt config.enc.yaml
        run: sops decrypt config.enc.yaml
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: make build
      - name: Save binary
        uses: actions/upload-artifact@v4
        with:
          name: gobot
          path: bin/gobot
      - run: make test
      - name: Upload Coverage Output
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: c.out
      - name: Update coverage report
        uses: actions/checkout@v4
      - uses: fgrosse/go-coverage-report@v1.0.1
        with:
          coverage-artifact-name: code-coverage
          coverage-file-name: c.out
        continue-on-error: true
